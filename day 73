# Python code to detect and remove loop in linked 
# list using hashing

class Node:
    def __init__(self, x):
        self.data = x
        self.next = None

def printList(curr):
  
    # Function to print the linked list
    while curr:
        print(curr.data, end=' ')
        curr = curr.next
    print()

def removeLoop(head):
  
    # Function to detect and remove loop from linked list
    nodeSet = set()
    prev = None
    while head:
      
        # If node is already in the set, remove the loop
        if head in nodeSet:
            prev.next = None
            return

        # Add node to the set and move forward
        nodeSet.add(head)
        prev = head
        head = head.next

if __name__ == "__main__":
	
    # Create a hard-coded linked list: 
	# 1 -> 3 -> 4
    head = Node(1)
    head.next = Node(3)
    head.next.next = Node(4)
    
    # Create a loop
    head.next.next.next = head.next

    removeLoop(head)
    printList(head)
